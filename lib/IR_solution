require_relative "../config/environment.rb"
require 'active_support/inflector'

class InteractiveRecord
  def self.table_name
    self.to_s.downcase.pluralize
  end

  def self.column_names
    table_info = DB[:conn].execute("PRAGMA table_info(#{table_name})")
    table_info.collect do |hash|
      hash["name"]
    end
  end

  def initialize(attributes={})
    attributes.each do |key, value|
      self.send("#{key}=", value)
    end
  end

  def col_names_for_insert
    self.class.column_names.delete_if{ |col| col == 'id' }.join(', ')
  end

  def table_name_for_insert
    self.class.table_name
  end

  def values_for_insert
    col_names_for_insert.split(', ').collect { |attribute| "'#{self.send(attribute)}'"}.join(', ')
  end

  def save
    sql = <<-SQL
      INSERT INTO #{table_name_for_insert}(#{col_names_for_insert})
      VALUES(#{values_for_insert})
    SQL
    DB[:conn].execute(sql)
    @id = DB[:conn].execute("SELECT last_insert_rowid() FROM #{table_name_for_insert}")[0][0]
  end

  def self.find_by(hash)
    key = hash.keys[0]
    sql = <<-SQL
      SELECT * FROM #{table_name}
      WHERE #{key} = ?
    SQL
    DB[:conn].execute(sql, hash[key])
  end

  def self.find_by_name(name)
    sql = <<-SQL
      SELECT * FROM #{table_name}
      WHERE name = ?
    SQL
    DB[:conn].execute(sql, name)
  end
end
